name: Build 64tass

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-64tass:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            binary_name: 64tass
            platform_name: Linux
          - os: macos-latest
            binary_name: 64tass
            platform_name: Darwin
          - os: windows-latest
            binary_name: 64tass.exe
            platform_name: Windows

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
          update: true

      - name: Build 64tass (Linux/macOS)
        if: matrix.os != 'windows-latest'
        working-directory: ./external-sources/64tass
        shell: bash
        run: |
          make
          mkdir -p ../../bins/${{ matrix.platform_name }}
          cp ${{ matrix.binary_name }} ../../bins/${{ matrix.platform_name }}/

      - name: Build 64tass (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./external-sources/64tass
        shell: msys2 {0}
        run: |
          # Build using Makefile.win but override problematic flags
          if [ -f "Makefile.win" ]; then
            echo "Using Makefile.win with 64-bit settings"
            make -f Makefile.win CC=gcc CFLAGS="-O2 -W -Wall -Wextra -Wwrite-strings -Wshadow -fstrict-aliasing -Wstrict-aliasing=2"
          else
            echo "Using default Makefile"
            make CC=gcc TARGET=64tass.exe
          fi
          
          mkdir -p ../../bins/${{ matrix.platform_name }}
          cp 64tass.exe ../../bins/${{ matrix.platform_name }}/

      - name: Upload platform binary
        uses: actions/upload-artifact@v4
        with:
          name: 64tass-${{ matrix.platform_name }}
          path: bins/${{ matrix.platform_name }}/${{ matrix.binary_name }}
          retention-days: 90

  create-release:
    needs: build-64tass
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
      
      - name: Debug artifact structure
        run: |
          echo "Artifact structure:"
          find release-assets -type f -ls
      
      - name: Prepare release files
        run: |
          mkdir -p release-files
          # Copy and rename files for release
          cp release-assets/64tass-Linux/64tass release-files/64tass-linux
          cp release-assets/64tass-Darwin/64tass release-files/64tass-macos
          cp release-assets/64tass-Windows/64tass.exe release-files/64tass-windows.exe
          
          echo "Release files:"
          ls -la release-files/
      
      - name: Create release tag
        id: tag
        run: |
          TAG_NAME="64tass-$(date +'%Y%m%d-%H%M%S')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: "64tass Build ${{ steps.tag.outputs.tag_name }}"
          body: |
            Automated build of 64tass
            
            Built from commit: ${{ github.sha }}
            
            **Downloads:**
            - Linux: 64tass-linux
            - macOS: 64tass-macos  
            - Windows: 64tass-windows.exe
          files: |
            release-files/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}